name: Release dotnet
on:
  workflow_call:
    secrets:
      token:
        required: true
env:
  GH_TOKEN: ${{ secrets.token }}
  NPM_TOKEN: ${{ secrets.token }}
  NODE_AUTH_TOKEN: ${{ secrets.token }}
jobs:
  release:
    name: Release
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Create and clean deployment directory
        run: |
          mkdir -p /deployment/dotnet-erp.logistic/project
          rm -rf /deployment/dotnet-erp.logistic/project/*

      - name: Clean specific directories
        run: |
          rm -rf /deployment/dotnet-erp.logistic/project/Console.Erp.Logistic.OrderStockAssignment
          rm -rf /deployment/dotnet-erp.logistic/project/Erp.Logistic
          rm -rf /deployment/dotnet-erp.logistic/project/OrderStockAssignment

      - name: Move project to deployment directory
        run: mv $GITHUB_WORKSPACE/* /deployment/dotnet-erp.logistic/project

      - name: Set repository name
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >> $GITHUB_ENV

      - name: Setup .NET
        run: |
          wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
          bash dotnet-install.sh --version 6.0.423 --install-dir $HOME/.dotnet
          export PATH=$HOME/.dotnet:$PATH

      - name: Verify project file exists
        run: ls -la /deployment/dotnet-erp.logistic/project/Erp.Logistic/Erp.Logistic.csproj

      - name: Stop and delete service
        run: sudo pm2 delete Erp.Logistic || true

      - name: Create release
        run: dotnet publish /deployment/dotnet-erp.logistic/project/Erp.Logistic/Erp.Logistic.csproj -c Release -o /deployment/dotnet-erp.logistic/dist -r linux-x64 --self-contained false

      - name: Create start script
        run: |
          echo '#!/bin/bash' > /deployment/dotnet-erp.logistic/start.sh
          echo 'dotnet /deployment/dotnet-erp.logistic/dist/Erp.Logistic.dll' >> /deployment/dotnet-erp.logistic/start.sh
        shell: bash

      - name: Set execute permission on start script
        run: chmod +x /deployment/dotnet-erp.logistic/start.sh

      - name: Create PM2 ecosystem file
        run: |
          echo "module.exports = {
            apps: [
              {
                name: 'Erp.Logistic',
                script: '/deployment/dotnet-erp.logistic/start.sh',
                instances: 1,
                exec_mode: 'cluster_mode',
              },
            ],
          };" > /deployment/dotnet-erp.logistic/ecosystem.config.js

      - name: Show PM2 version and status
        run: |
          sudo pm2 --version
          sudo pm2 list

      - name: Start service using PM2 ecosystem
        run: sudo pm2 start /deployment/dotnet-erp.logistic/ecosystem.config.js

      - name: reload service
        run: sudo pm2 reload Erp.Logistic
